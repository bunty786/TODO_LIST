{"version":3,"sources":["App.js","index.js"],"names":["App","useState","text","setText","localStorage","getItem","JSON","parse","item","setItem","useEffect","stringify","className","type","onChange","event","target","value","onClick","map","CurrElm","ind","id","upDatedData","filter","elem","deleteHandler","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8NAyFeA,MA/Ef,WAEE,IAUA,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAwBF,mBAVXG,aAAaC,QAAQ,SAGrBC,KAAKC,MAAMH,aAAaC,QAAQ,UAEpC,IAKT,mBAAOG,EAAP,KAAaC,EAAb,KAqCA,OAPAC,qBAAU,WAERN,aAAaK,QAAQ,QAAQH,KAAKK,UAAUH,MAC3C,CAACA,IAKF,qBAAKI,UAAU,MAAf,SACE,sBAAKA,UAAU,YAAf,UACE,yDACE,sBAAKA,UAAU,SAAf,UACA,uBAAQA,UAAU,gBAAgBC,KAAK,OAAOC,SAxC/B,SAACC,GACtBZ,EAAQY,EAAMC,OAAOC,QAuC2DA,MAAOf,IACjF,wBAASU,UAAU,SAASM,QApCZ,WAEhBhB,IAIFO,EAAQ,GAAD,mBAAKD,GAAL,CAAUN,KACjBC,EAAQ,MA6BN,SACA,cAAC,IAAD,SAGA,oBAAIS,UAAU,QAAd,SAEIJ,EAAKW,KAAI,SAACC,EAAQC,GAChB,OAAU,8BACC,qBAAIT,UAAU,QAAd,cAAyBQ,EACzB,wBAASF,QAAU,kBA/BvB,SAAGI,GACpB,IAAMC,EAAcf,EAAKgB,QAAO,SAACC,EAAKJ,GAEpC,OAAOA,IAAQC,KAGjBb,EAAQc,GAyBqCG,CAAcL,IAAtC,SAA6C,cAAC,IAAD,UAFpCA,cCnEpCM,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.f7ea2484.chunk.js","sourcesContent":["import './App.css';\nimport { useState , useEffect} from 'react';\nimport { AiOutlineCheck } from \"react-icons/ai\";\nimport { AiOutlineEnter } from \"react-icons/ai\";\n\n\n\n\n\n\nfunction App() {\n\n  const TogetData = () =>{\n    let list = localStorage.getItem('LISTS')\n  \n  if(list){\n        return JSON.parse(localStorage.getItem('LISTS'));\n  }else{\n    return [];\n  }\n}\n \n  const [text, setText] = useState('')\n  const [item, setItem] = useState(TogetData())\n\n  const OnChangeHandler =(event)=>{\n    setText(event.target.value);\n    \n  }\n\n  const ClickHandlerBtn = () =>{\n\n      if(!text){\n\n      }\n      else{\n        setItem([...item,text]);\n        setText('');\n\n      }\n      // setItem((olditem)=>{\n      //   return [...olditem,text];\n      // })\n  }\n  const deleteHandler =(  id) =>{\n      const upDatedData = item.filter((elem,ind)=>{\n        \n        return ind !== id ;\n\n      })\n      setItem(upDatedData);\n  }\n\n  useEffect(() => {\n    \n    localStorage.setItem('LISTS',JSON.stringify(item))\n  }, [item])\n\n  \n\n  return (\n    <div className=\"App\">\n      <div className='contClass' >\n        <h1>What's Your Plan Today?</h1>\n          <div className=\"InputF\">\n          <input  className='InputTextArea' type=\"text\" onChange={OnChangeHandler}  value={text}  />\n          <button  className='BtnSub' onClick={ClickHandlerBtn} >\n          <AiOutlineEnter/>\n            </button>  \n          </div> \n          <ul className='oldiv'>\n              {\n              item.map((CurrElm,ind)=> {\n                return(   <div key={ind}>\n                           <li className='liSty' > {CurrElm}                        \n                           <button  onClick={ ()=> deleteHandler(ind)} ><AiOutlineCheck/></button>\n                           </li>  \n                          </div>\n                ) \n              })\n            }\n            \n          </ul>\n        \n      </div>\n    </div>\n  );\n}\n\nexport default App;\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}